"use strict";(self.webpackChunkrx_angular=self.webpackChunkrx_angular||[]).push([[4554],{9223:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),s=["components"],o={title:"insert"},p=void 0,l={unversionedId:"cdk/api/transformation-helpers/array/insert",id:"cdk/api/transformation-helpers/array/insert",title:"insert",description:"insert",source:"@site/docs/cdk/api/transformation-helpers/array/insert.md",sourceDirName:"cdk/api/transformation-helpers/array",slug:"/cdk/api/transformation-helpers/array/insert",permalink:"/docs/cdk/api/transformation-helpers/array/insert",draft:!1,editUrl:"https://github.com/rx-angular/rx-angular/edit/main/docs/cdk/api/transformation-helpers/array/insert.md",tags:[],version:"current",frontMatter:{title:"insert"},sidebar:"docs",previous:{title:"extract",permalink:"/docs/cdk/api/transformation-helpers/array/extract"},next:{title:"remove",permalink:"/docs/cdk/api/transformation-helpers/array/remove"}},c={},u=[{value:"insert",id:"insert",level:2},{value:"Edge cases",id:"edge-cases",level:3},{value:"Signature",id:"signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"array",id:"array",level:4},{value:"typeof: T[]",id:"typeof-t",level:6},{value:"itemsOrItem",id:"itemsoritem",level:4},{value:"typeof: T | T[]",id:"typeof-t--t",level:6}],d={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"insert"},"insert"),(0,i.kt)("p",null,"Inserts one or multiple items to an array T[].\nReturns a shallow copy of the updated array T[], and does not mutate the original one."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// Inserting single value\n\nconst creatures = [\n  { id: 1, type: 'cat' },\n  { id: 2, type: 'dog' },\n];\n\nconst updatedCreatures = insert(creatures, { id: 3, type: 'parrot' });\n\n// updatedCreatures will be:\n//  [{id: 1, type: 'cat'}, {id: 2, type: 'dog}, {id: 3, type: 'parrot}];\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// Inserting multiple values\n\nconst creatures = [\n  { id: 1, type: 'cat' },\n  { id: 2, type: 'dog' },\n];\n\nconst updatedCreatures = insert(creatures, [\n  { id: 3, type: 'parrot' },\n  { id: 4, type: 'hamster' },\n]);\n\n// updatedCreatures will be:\n// [{id: 1, type: 'cat'}, {id: 2, type: 'dog'}, {id: 3, type: 'parrot'}, {id: 4, type: 'hamster'}];\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// Usage with RxState\n\nexport class ListComponent {\n  readonly insertCreature$ = new Subject<void>();\n\n  constructor(private state: RxState<ComponentState>) {\n    // Reactive implementation\n    state.connect('creatures', this.insertCreature$, ({ creatures }) => {\n      const creatureToAdd = {\n        id: generateId(),\n        name: 'newCreature',\n        type: 'dinosaur',\n      };\n      return insert(creatures, creatureToAdd);\n    });\n  }\n\n  // Imperative implementation\n  insertCeature(): void {\n    const creatureToAdd = {\n      id: generateId(),\n      name: 'newCreature',\n      type: 'dinosaur',\n    };\n    this.state.set({\n      creatures: insert(this.state.get().creatures, creatureToAdd),\n    });\n  }\n}\n")),(0,i.kt)("h3",{id:"edge-cases"},"Edge cases"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"insert(null as any, items) > items;\ninsert(items, null as any) > items;\ninsert(null as any, null as any) > null;\ninsert(undefined as any, undefined as any) > undefined;\ninsert(nonArray as any, items) > items;\n")),(0,i.kt)("h3",{id:"signature"},"Signature"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"function insert<T>(source: T[], updates: T | T[]): T[];\n")),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)("h4",{id:"array"},"array"),(0,i.kt)("h6",{id:"typeof-t"},"typeof: T[]"),(0,i.kt)("h4",{id:"itemsoritem"},"itemsOrItem"),(0,i.kt)("h6",{id:"typeof-t--t"},"typeof: T | T[]"))}m.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,y=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(y,s(s({ref:t},c),{},{components:r})):n.createElement(y,s({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);