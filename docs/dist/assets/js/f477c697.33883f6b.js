"use strict";(self.webpackChunkrx_angular=self.webpackChunkrx_angular||[]).push([[4489],{282:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var r=n(7462),s=n(3366),o=(n(7294),n(3905)),a=["components"],i={sidebar_position:1,sidebar_label:"Reuse ngrx selectors to compose state",title:"Reusing ngrx selectors to compose state"},l=void 0,c={unversionedId:"state/integrations/resuse-ngrx-selectors-to-compose-state",id:"state/integrations/resuse-ngrx-selectors-to-compose-state",title:"Reusing ngrx selectors to compose state",description:"Author: @Phhansen",source:"@site/docs/state/integrations/resuse-ngrx-selectors-to-compose-state.md",sourceDirName:"state/integrations",slug:"/state/integrations/resuse-ngrx-selectors-to-compose-state",permalink:"/docs/state/integrations/resuse-ngrx-selectors-to-compose-state",draft:!1,editUrl:"https://github.com/rx-angular/rx-angular/edit/main/docs/state/integrations/resuse-ngrx-selectors-to-compose-state.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Reuse ngrx selectors to compose state",title:"Reusing ngrx selectors to compose state"},sidebar:"docs",previous:{title:"Use RxState as Global State",permalink:"/docs/state/recipes/use-rxstate-as-global-state"},next:{title:"Manage entities using @ngrx/entity",permalink:"/docs/state/integrations/manage-entities-using-ngrx-entity"}},p={},m=[],u={toc:m};function g(e){var t=e.components,n=(0,s.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Author: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/Phhansen"},"@Phhansen"))),(0,o.kt)("h1",{id:"reusing-ngrx-selectors-to-compose-state"},"Reusing ngrx selectors to compose state"),(0,o.kt)("p",null,"Here is an example of using ",(0,o.kt)("a",{parentName:"p",href:"https://ngrx.io/guide/store/selectors"},"NgRx selectors")," alongside ",(0,o.kt)("inlineCode",{parentName:"p"},"@rx-angular/state")," to compose reusable state selectors."),(0,o.kt)("p",null,"Imagine the following ",(0,o.kt)("inlineCode",{parentName:"p"},"ComponentState")," setup:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface Item {\n  id: string;\n  name: string;\n}\n\ninterface ComponentState {\n  items: { [id: string]: Item };\n  visibleIds: string[];\n}\n")),(0,o.kt)("p",null,"Now we want to derive a list of visible items based on all ",(0,o.kt)("inlineCode",{parentName:"p"},"items")," and the array of ",(0,o.kt)("inlineCode",{parentName:"p"},"visibleIds"),". We can do so by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"createSelector()")," function from NgRx."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const selectItems = (state: ComponentState) => state.items;\n\nconst selectVisibleIds = (state: ComponentState) => state.visibleIds;\n\nconst selectVisibleItems = createSelector(\n  selectVisibleIds,\n  selectItems,\n  (visibleIds, items) => visibleIds.map((id) => items[id])\n);\n")),(0,o.kt)("p",null,"Using this in our component will look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { select } from '@ngrx/store';\n\n@Component()\nexport class ItemListComponent extends RxState<ComponentState> {\n  readonly visibleItems$ = this.state.select(select(selectVisibleItems));\n\n  constructor() {\n    super();\n  }\n}\n")))}g.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),g=s,d=u["".concat(l,".").concat(g)]||u[g]||m[g]||o;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function g(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);