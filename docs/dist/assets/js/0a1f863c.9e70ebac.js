"use strict";(self.webpackChunkrx_angular=self.webpackChunkrx_angular||[]).push([[2665],{4456:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),i=["components"],l={title:"stateful"},s=void 0,p={unversionedId:"state/api/rxjs-operators/stateful",id:"state/api/rxjs-operators/stateful",title:"stateful",description:"stateful",source:"@site/docs/state/api/rxjs-operators/stateful.md",sourceDirName:"state/api/rxjs-operators",slug:"/state/api/rxjs-operators/stateful",permalink:"/docs/state/api/rxjs-operators/stateful",draft:!1,editUrl:"https://github.com/rx-angular/rx-angular/edit/main/docs/state/api/rxjs-operators/stateful.md",tags:[],version:"current",frontMatter:{title:"stateful"},sidebar:"docs",previous:{title:"select",permalink:"/docs/state/api/rxjs-operators/select"},next:{title:"Interfaces",permalink:"/docs/category/interfaces-1"}},u={},c=[{value:"stateful",id:"stateful",level:2},{value:"Signature",id:"signature",level:3},{value:"Signature",id:"signature-1",level:3},{value:"Parameters",id:"parameters",level:3},{value:"optionalDerive",id:"optionalderive",level:4},{value:"typeof: OperatorFunction&lt;T, R&gt;[]",id:"typeof-operatorfunctiont-r",level:5}],m={toc:c};function f(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"stateful"},"stateful"),(0,o.kt)("p",null,"As the name ",(0,o.kt)("inlineCode",{parentName:"p"},"stateful")," implies this operator is useful when you process an Observable which maintains state."),(0,o.kt)("p",null,"Maintaining state as an ",(0,o.kt)("inlineCode",{parentName:"p"},"Observable")," source comes with a handful of repetitive as well as use case specific tasks."),(0,o.kt)("p",null,"It acts like the Observables ",(0,o.kt)("inlineCode",{parentName:"p"},"pipe")," method.\nIt accepts RxJS operators and composes them like ",(0,o.kt)("inlineCode",{parentName:"p"},"Observable#pipe")," and the standalone ",(0,o.kt)("inlineCode",{parentName:"p"},"pipe")," method."),(0,o.kt)("p",null,"Furthermore, it takes care of the above mentioned repetitive tasks as listed below."),(0,o.kt)("p",null,"You will always (aka repetitive) want to ensure that:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"only distinct state changes are emitted"),(0,o.kt)("li",{parentName:"ul"},"only defined values are emitted (filter out undefined, which ensures lazy state)"),(0,o.kt)("li",{parentName:"ul"},"share and replay custom operations for multiple subscribers (saves performance)")),(0,o.kt)("p",null,"You will sometimes (aka situational) need:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"a subset of the state (derivations)"),(0,o.kt)("li",{parentName:"ul"},"compose the state with other Observables or change the Observables behaviour")),(0,o.kt)("p",null,"Note that ",(0,o.kt)("inlineCode",{parentName:"p"},"RxState#connect")," already applies the ",(0,o.kt)("inlineCode",{parentName:"p"},"stateful")," operator under the hood."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Example")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { stateful } from 'rx-angular/state';\n\nconst state$: Observable<{ name: string; items: string[] }>;\nconst derivation$ = state$.pipe(\n  stateful(\n    map((state) => state.list.length),\n    filter((length) => length > 3)\n  )\n);\n")),(0,o.kt)("h3",{id:"signature"},"Signature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function stateful<T>(): MonoTypeOperatorFunction<T>;\n")),(0,o.kt)("h3",{id:"signature-1"},"Signature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function stateful<T, R>(\n  optionalDerive: OperatorFunction<T, R>[]\n): OperatorFunction<T, T | R>;\n")),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)("h4",{id:"optionalderive"},"optionalDerive"),(0,o.kt)("h5",{id:"typeof-operatorfunctiont-r"},"typeof: OperatorFunction","<","T, R",">","[]"))}f.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(r),f=n,d=m["".concat(s,".").concat(f)]||m[f]||c[f]||o;return r?a.createElement(d,i(i({ref:t},u),{},{components:r})):a.createElement(d,i({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);