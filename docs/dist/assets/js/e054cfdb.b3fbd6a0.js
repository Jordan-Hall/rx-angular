"use strict";(self.webpackChunkrx_angular=self.webpackChunkrx_angular||[]).push([[1430],{7400:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),s=["components"],o={sidebar_label:"Setup",title:"Setting up a Reactive State"},l="Setting up a Reactive State",p={unversionedId:"state/tutorials/basic-tutorial/setup",id:"state/tutorials/basic-tutorial/setup",title:"Setting up a Reactive State",description:"We're assuming you've already covered the basics here.",source:"@site/docs/state/tutorials/basic-tutorial/01-setup.md",sourceDirName:"state/tutorials/basic-tutorial",slug:"/state/tutorials/basic-tutorial/setup",permalink:"/docs/state/tutorials/basic-tutorial/setup",draft:!1,editUrl:"https://github.com/rx-angular/rx-angular/edit/main/docs/state/tutorials/basic-tutorial/01-setup.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Setup",title:"Setting up a Reactive State"},sidebar:"docs",previous:{title:"KeyCompareMap",permalink:"/docs/state/api/interfaces/key-compare-map"},next:{title:"Input Bindings",permalink:"/docs/state/tutorials/basic-tutorial/input-bindings"}},c={},u=[{value:"Implement RxState service",id:"implement-rxstate-service",level:2},{value:"Select and display state",id:"select-and-display-state",level:3},{value:"Initialize the state",id:"initialize-the-state",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"setting-up-a-reactive-state"},"Setting up a Reactive State"),(0,r.kt)("p",null,"We're assuming you've already covered the basics ",(0,r.kt)("a",{parentName:"p",href:"/docs/state/getting-started/setup"},"here"),"."),(0,r.kt)("p",null,"In this section, we will be working with an ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/rx-angular/rx-angular/blob/main/apps/demos/src/app/features/tutorials/basics/1-setup/setup.start.component.ts"},"imperative code base")," to refactor\nits state management to a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/rx-angular/rx-angular/blob/main/apps/demos/src/app/features/tutorials/basics/1-setup/setup.solution.component.ts"},"reactive setup"),"."),(0,r.kt)("p",null,"We will set up ",(0,r.kt)("inlineCode",{parentName:"p"},"RxState")," in the component, initialize the component's local state, and render it in the template."),(0,r.kt)("p",null,"In addition, we've introduced automated subscription handling, the possibility for imperative interaction\nover component's input bindings, and a clean separation of concerns."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"implement-rxstate-service"},"Implement RxState service"),(0,r.kt)("p",null,"The first step is to introduce a reactive state to our component by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"RxState")," class.\nThis can be done either through inheritance, which means we extend the state service; or through composition, in which case we inject the service into the constructor and add the service to the component's ",(0,r.kt)("inlineCode",{parentName:"p"},"providers")," section."),(0,r.kt)("p",null,"In this case, we will simply extend the service.\nOne distinct feature of this method, which is both its benefit and disadvantage, is that we can directly access the service's API using ",(0,r.kt)("inlineCode",{parentName:"p"},"this")," (e.g., ",(0,r.kt)("inlineCode",{parentName:"p"},"this.select('prop')"),".)"),(0,r.kt)("p",null,"To this end, we have to extend our class and use the already existing ",(0,r.kt)("inlineCode",{parentName:"p"},"ComponentState")," interface (see\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/rx-angular/rx-angular/blob/main/apps/demos/src/app/features/tutorials/basics/1-setup/setup.start.component.ts"},"setup.start.component.ts"),".)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"\n// 1- import RxState\nimport { RxState } from '@rx-angular/state';\n\n...\n\n// 2- define a component state\ninterface ComponentState {\n  refreshInterval: number;\n  list: DemoBasicsItem[];\n  listExpanded: boolean;\n}\n\n// 3- extend the component, or alternatively, register a local provider and inject it\nexport class SetupStart extends RxState<ComponentState> implements OnInit, OnDestroy  ... {\n")),(0,r.kt)("p",null,"Since we decided to create a reactive state by extending an existing component, we will need to extend its class definition and call ",(0,r.kt)("inlineCode",{parentName:"p"},"super()")," in the constructor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"constructor(...) {\n  super();\n}\n")),(0,r.kt)("p",null,"For the sake of example, we added the state to the same file, but for a more robust architecture, consider having it in a separate file with the ",(0,r.kt)("inlineCode",{parentName:"p"},".state.ts")," extension."),(0,r.kt)("h3",{id:"select-and-display-state"},"Select and display state"),(0,r.kt)("p",null,"The next step is to set up ",(0,r.kt)("inlineCode",{parentName:"p"},"model$"),", a component property that holds all data we wish to display in the template."),(0,r.kt)("p",null,"By assigning the ",(0,r.kt)("inlineCode",{parentName:"p"},"model$")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"$")," property of the ",(0,r.kt)("inlineCode",{parentName:"p"},"RxState")," class, we get the full state object as ",(0,r.kt)("inlineCode",{parentName:"p"},"Observable<ComponentState>"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@Component({\n  selector: 'rxa-setup-solution',\n  template: `\n    model$: <pre>{{model$ | async | json}}</pre>\n    ...\n  `,\n  ...\n})\nexport class SetupReactiveComponentStateContainerComponent extends RxState<ComponentState> {\n  model$ = this.select();\n  list$: Observable<DemoBasicsItem[]> = this.select('list')\n}\n")),(0,r.kt)("h2",{id:"initialize-the-state"},"Initialize the state"),(0,r.kt)("p",null,"As ",(0,r.kt)("inlineCode",{parentName:"p"},"RxState")," is empty and thus lazy at initialization, we can decide if we want to assign initial values to the state and which values these will be.\nWe can initialize the state imperatively by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"set()")," or by using an observable and the ",(0,r.kt)("inlineCode",{parentName:"p"},"connect()")," method."),(0,r.kt)("p",null,"We will use ",(0,r.kt)("inlineCode",{parentName:"p"},"set()")," as we already have initial values assigned to the ",(0,r.kt)("inlineCode",{parentName:"p"},"initComponentState")," object's properties."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"}," constructor(...) {\n  ...\n  this.set(initComponentState);\n}\n")),(0,r.kt)("p",null,"After we have completed all these steps, we should see the initial state in the template."))}m.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);