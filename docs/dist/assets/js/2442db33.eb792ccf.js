"use strict";(self.webpackChunkrx_angular=self.webpackChunkrx_angular||[]).push([[651],{9020:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var r=n(7462),s=n(3366),a=(n(7294),n(3905)),i=["components"],o={title:"Passing observables directly"},l="Passing observables directly",p={unversionedId:"state/tutorials/passing-observables-directly",id:"state/tutorials/passing-observables-directly",title:"Passing observables directly",description:"In this section we will compare the different ways to pass a value to components.",source:"@site/docs/state/tutorials/passing-observables-directly.md",sourceDirName:"state/tutorials",slug:"/state/tutorials/passing-observables-directly",permalink:"/docs/state/tutorials/passing-observables-directly",draft:!1,editUrl:"https://github.com/rx-angular/rx-angular/edit/main/docs/state/tutorials/passing-observables-directly.md",tags:[],version:"current",frontMatter:{title:"Passing observables directly"},sidebar:"docs",previous:{title:"Migrating to RxState",permalink:"/docs/state/tutorials/migrating-to-rxstate"},next:{title:"Determine state type",permalink:"/docs/state/recipes/determine-state-type"}},c={},u=[{value:"Passing values",id:"passing-values",level:2},{value:"Passing observables",id:"passing-observables",level:2}],d={toc:u};function h(e){var t=e.components,n=(0,s.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"passing-observables-directly"},"Passing observables directly"),(0,a.kt)("p",null,"In this section we will compare the different ways to pass a value to components.\nThe 2 discussed ways are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Passing single values, done via the async pipe"),(0,a.kt)("li",{parentName:"ul"},"Passing the whole observable")),(0,a.kt)("h2",{id:"passing-values"},"Passing values"),(0,a.kt)("p",null,"Here we subscribe to an Observable over the ",(0,a.kt)("inlineCode",{parentName:"p"},"async")," pipe.\nEvery emitted value triggers the change detection and re-renders the parent component."),(0,a.kt)("p",null,"This passes the value to the child component.\nIn the child's ",(0,a.kt)("inlineCode",{parentName:"p"},"@Input")," binding the ",(0,a.kt)("inlineCode",{parentName:"p"},"set")," method get used to forward the value which is bound to the template by another ",(0,a.kt)("inlineCode",{parentName:"p"},"async")," pipe."),(0,a.kt)("p",null,"This in turn triggers another re-rendering, and the value get displayed in the child component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"@Component({\n  selector: 'parent',\n  template: ` <user-list [users]=\"users$ | async\"></user-list> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParentComponent {\n  users$ = userService.users$;\n  constructor(private userService: UserService) {}\n}\n\n@Component({\n  selector: 'user-list',\n  template: `\n    <div *ngFor=\"let user of users$ | async\">\n      {{ user }}\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChildComponent {\n  users$ = this.select('users');\n  @Input()\n  set users(users) {\n    this.set({ users });\n  }\n}\n")),(0,a.kt)("h2",{id:"passing-observables"},"Passing observables"),(0,a.kt)("p",null,"This example in comparison passes the Observable directly to the child component."),(0,a.kt)("p",null,"Only the first time the parent triggers the change detection and re-renders."),(0,a.kt)("p",null,"This passes the value to the child component.\nIn the child's ",(0,a.kt)("inlineCode",{parentName:"p"},"@Input")," binding the ",(0,a.kt)("inlineCode",{parentName:"p"},"connect")," method get used to forward the value which is bound to the template by another ",(0,a.kt)("inlineCode",{parentName:"p"},"async")," pipe."),(0,a.kt)("p",null,"This in turn triggers another re-rendering, and the value get displayed in the child component."),(0,a.kt)("p",null,"If we compare the number of change detections with the above example where we passed the single values we save 1 rendering per emission.\nIn a real life application only a view of those changes at the right place gives a big impact in performance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"@Component({\n  selector: 'parent',\n  template: ` <user-list [users]=\"users$\"></user-list> `,\n})\nexport class ParentComponent {\n  users$ = userService.users$;\n  constructor(private userService: UserService) {}\n}\n\n@Component({\n  selector: 'user-list',\n  template: `\n    <div *ngFor=\"let user of users$ | async\">\n      {{ user }}\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChildComponent {\n  users$ = this.select('users');\n  @Input()\n  set users(users$) {\n    this.connect('users', users$);\n  }\n}\n")))}h.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),h=s,g=d["".concat(l,".").concat(h)]||d[h]||u[h]||a;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,i=new Array(a);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);