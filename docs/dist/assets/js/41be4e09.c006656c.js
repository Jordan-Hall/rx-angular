"use strict";(self.webpackChunkrx_angular=self.webpackChunkrx_angular||[]).push([[6152],{2958:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>o,metadata:()=>p,toc:()=>m});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),i=["components"],o={title:"selectSlice"},s=void 0,p={unversionedId:"state/api/rxjs-operators/select-slice",id:"state/api/rxjs-operators/select-slice",title:"selectSlice",description:"selectSlice",source:"@site/docs/state/api/rxjs-operators/select-slice.md",sourceDirName:"state/api/rxjs-operators",slug:"/state/api/rxjs-operators/select-slice",permalink:"/docs/state/api/rxjs-operators/select-slice",draft:!1,editUrl:"https://github.com/rx-angular/rx-angular/edit/main/docs/state/api/rxjs-operators/select-slice.md",tags:[],version:"current",frontMatter:{title:"selectSlice"},sidebar:"docs",previous:{title:"distinctUntilSomeChanged",permalink:"/docs/state/api/rxjs-operators/distinct-until-some-changed"},next:{title:"select",permalink:"/docs/state/api/rxjs-operators/select"}},c={},m=[{value:"selectSlice",id:"selectslice",level:2},{value:"Signature",id:"signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"keys",id:"keys",level:4},{value:"typeof: K[]",id:"typeof-k",level:5},{value:"keyCompareMap",id:"keycomparemap",level:4},{value:"typeof: KeyCompareMap&lt;{ P in K: TP }&gt;",id:"typeof-keycomparemap-p-in-k-tp-",level:5}],u={toc:m};function y(e){var t=e.components,n=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"selectslice"},"selectSlice"),(0,l.kt)("p",null,"Returns an Observable that emits only the provided ",(0,l.kt)("inlineCode",{parentName:"p"},"keys")," emitted by the source Observable. Each key will get\nfiltered to only emit ",(0,l.kt)("em",{parentName:"p"},"defined")," values as well as checked for distinct emissions.\nComparison will be done for each set key in the ",(0,l.kt)("inlineCode",{parentName:"p"},"keys")," array."),(0,l.kt)("p",null,"You can fine grain your distinct checks by providing a ",(0,l.kt)("inlineCode",{parentName:"p"},"KeyCompareMap")," with those keys you want to compute\nexplicitly different"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"// An example with a custom comparison applied to each key\nimport { of } from 'rxjs';\nimport { selectSlice } from 'rx-angular/state';\n\nconst state$: Observable<MyState> = of(\n  { title: 'myTitle', panelOpen: true },\n  { title: 'myTitle2', panelOpen: true },\n  { title: 'newTitle', panelOpen: true },\n  { title: 'newTitle', panelOpen: false }\n)\n  .pipe(selectSlice(['title', 'panelOpen']))\n  .subscribe((x) => console.log(x));\n\n// displays:\n//  { title: 'myTitle', panelOpen: true },\n//  { title: 'myTitle2', panelOpen: true },\n//  { title: 'newTitle', panelOpen: true },\n//  { title: 'newTitle', panelOpen: false }\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { of, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { selectSlice } from 'rx-angular/state';\n\ninterface MyState {\n  title: string;\n  items: string[];\n  panelOpen: boolean;\n}\n// Select items and title.\n// apply custom compare logic for the items array\nconst customComparison: KeyCompareMap<MyState> = {\n  items: (oldItems, newItems) => compareItems(oldItems, newItems),\n};\nconst state$: Observable<MyState> = of(\n  { title: 'myTitle', items: ['foo', 'bar'], panelOpen: true },\n  { title: 'myTitle', items: ['foo', 'bar'], panelOpen: false },\n  { title: 'nextTitle', items: ['foo', 'baR'], panelOpen: true },\n  { title: 'nextTitle', items: ['fooRz', 'boo'], panelOpen: false }\n);\nconst slice$ = state$\n  .pipe(selectSlice(['title', 'items']), tap(console.log))\n  .subscribe();\n\n// displays:\n// { title: 'myTitle', items: ['foo', 'bar'] }\n// { title: 'nextTitle', items: ['foo', 'baR'] }\n// { title: 'nextTitle', items: ['fooRz', 'boo'] }\n")),(0,l.kt)("h3",{id:"signature"},"Signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function selectSlice<T extends object, K extends keyof T>(\n  keys: K[],\n  keyCompareMap?: KeyCompareMap<{ [P in K]: T[P] }>\n): OperatorFunction<T, PickSlice<T, K> | null>;\n")),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)("h4",{id:"keys"},"keys"),(0,l.kt)("h5",{id:"typeof-k"},"typeof: K[]"),(0,l.kt)("h4",{id:"keycomparemap"},"keyCompareMap"),(0,l.kt)("h5",{id:"typeof-keycomparemap-p-in-k-tp-"},"typeof: KeyCompareMap","<","{ ","[P in K]",": T","[P]"," }",">"))}y.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),y=a,f=u["".concat(s,".").concat(y)]||u[y]||m[y]||l;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);